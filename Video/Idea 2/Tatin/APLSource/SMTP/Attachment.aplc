:Class Attachment

    ∇ make1(filename);extension
      :Access Public Instance
      :Implements Constructor
      Init filename
      :If 0=≢extension←3⊃⎕NPARTS _filename
          _mimeType←'application/octet-stream'
      :Else
          _mimeType←GetMimeType extension
      :EndIf
    ∇

    ∇ make2(filename mimeType)
      :Access Public Instance
      :Implements Constructor
      Init filename
      _mimeType←mimeType
      'Mime type must not be empty'Assert 0<≢_mimeType
    ∇

    ∇ Init filename
      'File not found'Assert ⎕NEXISTS filename
      _filename←filename
      _mimeType←''
    ∇

    :Property filename
    :Access Public Instance
        ∇ r←get
          r←_filename
        ∇
    :EndProperty

    :Property mimeType
    :Access Public Instance
        ∇ r←get
          r←_mimeType
        ∇
        ∇ set Arg
          'mimeType: invalid depth'Assert(≡Arg.NewValue)∊0 1
          'mimeType: invalid data type'Assert' '=1↑0⍴Arg.NewValue
          _mimeType←Arg.NewValue
        ∇
    :EndProperty

    ∇ r←GetAllMimeTypes;mat;row
    ⍝ Returns a matrix with two columns: extension and Mime type
      :Access Public Shared
      r←''
      r,←⊂'.bin' 'application/octet-stream'
      r,←⊂'.bmp' 'image/bmp'
      r,←⊂'.css' 'text/css'
      r,←⊂'.csv' 'text/csv'
      r,←⊂'.doc' 'application/msword'
      r,←⊂'.docx' 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
      r,←⊂'.gz' 'application/gzip'
      r,←⊂'.gif' 'image/gif'
      r,←⊂'.htm' 'text/html'
      r,←⊂'.html' 'text/html'
      r,←⊂'.ico' 'image/vnd.microsoft.ico'
      r,←⊂'.jpeg' 'image/jpeg'
      r,←⊂'.js' 'text/javascript'
      r,←⊂'.json' 'application/json'
      r,←⊂'.mp3' 'audio/mpeg'
      r,←⊂'.mp4' 'video/mp4'
      r,←⊂'.mpeg' 'video/mpeg'
      r,←⊂'.otf' 'font/otf'
      r,←⊂'.png' 'image/png'
      r,←⊂'.pdf' 'application/pdf'
      r,←⊂'.ppt' 'application/vnd.ms-powerpoint'
      r,←⊂'.pptx' 'application/vnd.openxmlformats-officedocument.presentationml.presentation'
      r,←⊂'.rar' 'application/vnd.rar'
      r,←⊂'.rtf' 'application/rtf'
      r,←⊂'.sh' 'application/x-sh'
      r,←⊂'.svg' 'image/svg+xml'
      r,←⊂'.tar' 'application/x-tar'
      r,←⊂'.tif' 'image/tiff'
      r,←⊂'.ttf' 'font/ttf'
      r,←⊂'.txt' 'text/plain'
      r,←⊂'.vsd' 'application/vnd.visio'
      r,←⊂'.wav' 'audio/wav'
      r,←⊂'.woff' 'font/woff'
      r,←⊂'.woff2' 'font/woff2'
      r,←⊂'.xhtml' 'application/xhtml+xml'
      r,←⊂'.xls' 'application/vnd.ms-excel'
      r,←⊂'.xlsx' 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      r,←⊂'.xml' 'text/xml'
      r,←⊂'.zip' 'application/zip'
      r,←⊂'.7z' 'application/x-7z-compresses'
      r←↑r
    ∇

    ∇ r←GetMimeType extension;mat;row
      :Access Public Shared
      extension←⎕C(('.'≠1⍴extension)/'.'),extension
      mat←GetAllMimeTypes
      :If (≢mat)≥row←mat[;1]⍳⊂extension
          r←2⊃mat[row;]
      :Else
          r←'application/octet-stream'  ⍝ Kind of most general MIME type
      :EndIf
    ∇

    Assert←{⍺←'' ⋄ (,1)≡,⍵:r←1 ⋄ ⎕ML←1 ⋄ ⍺ ⎕SIGNAL 1↓(⊃∊⍵),11}

:EndClass
