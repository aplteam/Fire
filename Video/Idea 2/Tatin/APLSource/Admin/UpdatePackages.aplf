 {r}←{forceTatin}UpdatePackages flag;config;packages;package;i;folders;folder;filename;rc;old;new;json
⍝ Takes TatinPackages.config as input and carries out the following steps:
⍝ 1. It re-installs all packages defined in that config file
⍝ 2. It then copies the required scripts from the folder packages\ to APLSource\
⍝ 3. The assets required by MarkAPL are copied into ./Assets/MarkAPL\\
⍝ Right argument is just insurance against accidental calls.
⍝ By default all known Registries are scanned. You can overwrite this by specifying
⍝ a 1 as left argument: then only the principal Tatin server is questioned.\\
⍝ Returns a 1 if any of the scripts was actually exchanged, otherwise 0.
 r←0
 forceTatin←{0<⎕NC ⍵:⍎⍵ ⋄ 0}'forceTatin'
 config←##.Registry.JSON⊃##.FilesAndDirs.NGET'TatinPackages.config'
 packages←∪⊃,/config.(Client Development Server)
 rc←##.FilesAndDirs.RmDir'packages'
 'Removing directory packages\ failed 'Assert 0=⊃rc
 ##.FilesAndDirs.MkDir'packages'
 i←0
 :For package :In packages
     i+←1
     ⎕←'Loading package ',package,' (',((⍕i),' of ',(⍕≢packages)),')...'
     ⎕SE.Tatin.InstallPackage((forceTatin/'[tatin]'),package)'./packages/'
 :EndFor
 json←##.Registry.JSON⊃##.FilesAndDirs.NGET'./packages/apl-buildlist.json'
 folders←'./packages/'∘,¨json.packageID
 :For folder :In folders
     filename←⊃##.FilesAndDirs.ListFiles folder,'/*.aplc'
     'Must not be empty'Assert 0<≢filename
     old←⊃##.FilesAndDirs.NGET'./APLSource/',⊃,/1↓⎕NPARTS filename
     new←⊃##.FilesAndDirs.NGET filename
     :If old≢new
         r←1
         './APLSource'⎕NCOPY⍠('IfExists' 'Replace')⊣filename
     :EndIf
 :EndFor
⍝Done
