 {r}←{bumpBuild}MakeClient batchFlag;msg;F;targetPath;userCommandTargetFolder;ts1;ts2;path;reg;_userSettings;list;zipFilename;zipContent;fileList;b;rc;more;en;myZip;parms;dirList
⍝ This functions creates a new Tatin Client. It can be called from a developer's session (⍵←0) or as part of an automated "Make"
⍝ process with ⍵←1.\\
⍝ In case of a problem an error is thrown if ⍵=0 and ⎕OFF 123 if ⍵=1.\\
⍝ You may call this independently from `MakeServer`.\\
⍝ `bumpBuild` must be a Boolean; 1 means that the build number will be bumped.
⍝ Other values result in an error or ⎕OFF 123 respectively.
⍝ Defaults to 1 if not specified.\\
 r←⍬
 F←##.FilesAndDirs
 bumpBuild←{0<⎕NC ⍵:⍎⍵ ⋄ 1}'bumpBuild'
 :If ~batchFlag
     ⎕←(⎕PW-1)⍴'-'
     msg←''
     msg,←⊂'This function will close all Cider projects, delete everything that is not needed in order to'
     msg,←⊂'use the Tatin client, re-arrange stuff and finally save the workspace together with'
     msg,←⊂'everything that is needed by the client in Dist/Client/Client.dws'
     msg,←⊂'The Tatin client will be copied from that WS into ⎕SE once a Tatin user command is invoked.'
     msg,←⊂''
     msg,←⊂'It also checks whether the user command script should be copied to the MyCMDs folder or vice'
     msg,←⊂'versa, depending on where the last change was made.'
     msg,←⊂''
     msg,←⊂'Eventually all that''s required is zipped into a file <Tatin-Client-{major}.{Minor}.{Patch}.zip'
     msg,←⊂'That file is created within the Dist/ folder.'
     ⎕←⍪msg
     ⎕←''
 :EndIf
 :If batchFlag
 :OrIf 1 ##.Client.YesOrNo'Would you like to continue?'
     UpdateVersionNumber bumpBuild
     {}⎕SE.Cider.CloseProject''
     parms←⎕SE.Cider.CreateOpenParms ⍬
     parms.folder←#.Tatin.CiderConfig.HOME
     parms.projectSpace←'_Tatin'
     parms.suppressLX←1
     parms.checkPackageStatus←0
     Assert ⎕SE.Cider.OpenProject parms
     {}⎕SE.Cider.CloseProject''
     #._Tatin.⎕EX¨'Server' 'Todo' 'TestCases' 'Simu' 'TestCasesServer' 'Tester2' 'CodeCoverage'
     #._Tatin.Admin.⎕EX¨'Initialize_Server' 'RunTestServer' 'CreateAllRefs_Server'
     ⎕LX←''
     #._Tatin.Admin.Initialize_Client
     #._Tatin.Admin.⎕EX'Initialize_Client'
     F.MkDir'Dist'
     targetPath←'Dist/Client'
     F.RmDir targetPath
     ⎕DL 0.1
     F.MkDir targetPath
     ⎕DL 0.1
     ⎕WSID←targetPath,'/Tatin/Client'
     Assert F.MkDir targetPath,'/Tatin'
     #.⎕EX¨(' '~¨⍨↓#.⎕NL⍳16)~⊂'_Tatin'
     #.⎕EX'Make_'
     0 ⎕SAVE ⎕WSID   ⍝ If this crashes, in particular with "Reference in ⎕SE points to #" or vise versa) execute ⎕OFF 123 and try again
     (targetPath,'/Tatin')⎕NCOPY⍠('IfExists' 'Replace')⊣'Tatin.dyalog'
     'Create!'F.CheckPath targetPath,'/Tatin/Assets'
     {0=≢l←F.ListFiles ⍵:shy←0 ⋄ (targetPath,'/Tatin/Assets/')⎕NCOPY⍠('IfExists' 'Replace')⊣l}'./Assets/Runtime/' ⍝ Copy all files, if any
     dirList←F.NormalizePath F.ListDirs'./Assets/Runtime/'  ⍝ List with all sub dirs
     dirList~←⊂F.NormalizePath'./Assets/Runtime/Conga'      ⍝ The client does not require the Conga DLLs
     {(targetPath,'/Tatin/Assets/')⎕NCOPY⍠('IfExists' 'Replace')⊣⍵}¨dirList
     _userSettings←⎕NEW #._Tatin.Client.UserSettings(,⊂targetPath,'/Tatin/')
     reg←_userSettings.GetRegistry'[tatin]'
     _userSettings.ReplaceRegistry reg
     (targetPath,'/')⎕NCOPY⍠('IfExists' 'Replace')⊣'setup.dyalog.RemoveMe'
     userCommandTargetFolder←#._Tatin.Client.GetMyUCMDsFolder''
     :If 1 ##.Client.YesOrNo'Would you like to copy the Tatin client to ',userCommandTargetFolder
         F.RmDir userCommandTargetFolder,'/Tatin'
         ⎕DL 1
         F.MkDir userCommandTargetFolder,'/Tatin'
         (userCommandTargetFolder,'/Tatin/')⎕NCOPY⍠('IfExists' 'Replace')⊣⎕WSID,'.dws'
         :If F.Exists userCommandTargetFolder,'/Tatin/Tatin.dyalog'
             ts1←' -:,./'~⍨##.APLTreeUtils2.FormatDateTime⊃⊃('type' 3)F.Dir userCommandTargetFolder,'/Tatin/Tatin.dyalog'
             ts2←' -:,./'~⍨##.APLTreeUtils2.FormatDateTime⊃⊃('type' 3)F.Dir'./Tatin/Tatin.dyalog'
             :If ts1≢ts2
                 :Select ⍋ts1 ts2
                 :Case 1 2
                     (userCommandTargetFolder,'/Tatin/')⎕NCOPY⍠('IfExists' 'Replace')⊣'./Tatin.dyalog'
                 :Case 2 1
                     './'⎕NCOPY⍠('IfExists' 'Replace')⊣userCommandTargetFolder,'/Tatin/Tatin.dyalog'
                 :EndSelect
             :EndIf
         :Else
             (userCommandTargetFolder,'/Tatin/')⎕NCOPY'./Tatin.dyalog'
         :EndIf
     :EndIf
     path←#._Tatin.Client.GetUserHomeFolder,'/',#._Tatin.Client.UserSettings.cfg_name
     :If 0=F.IsFile path
     :OrIf 0 ##.Client.YesOrNo'Overwrite "',path,'" ?'
         path ⎕NCOPY⍠('IfExists' 'Replace')⊣_userSettings.path2config
     :EndIf
     F.DeleteFile¨F.Dir'Dist/Tatin-Client-*.zip'
     zipFilename←'Dist/Tatin-Client-',({{⍵/⍨∧\⍵∊'.',⎕D}⍵/⍨3>+\'.'=⍵}(2⊃##.Client.Version),''),'.zip'
     ⎕DL 0.1
     fileList←'recursive'F.ListFiles targetPath,'\'
     fileList←F.EnforceSlash¨(1+≢targetPath)↓¨fileList
     myZip←⎕NEW ##.DotNetZip(,⊂zipFilename)
     targetPath myZip.Add fileList
    ⍝targetPath ##.DotNetZip.ZipFolder zipFilename   ⍝ This causes potentially trouble on Linux and Mac OS because of the \
     ⎕DL 1
     myZip.Dispose
     zipContent←##.DotNetZip.ListZipContents zipFilename
     'Something went wrong with the ZIP file'Assert fileList{(∧/⍺∊⍵)∧(∧/⍵∊⍺)}zipContent
     3 ⎕NDELETE userCommandTargetFolder,'/Tatin.dyalog'  ⍝ Because until 0.61.0 was released the user command script was a sibling of the Tatin/ folder
     :If batchFlag
         ⎕OFF
     :Else
         ⎕←'*** Done;  note that the Tatin project has been closed'
     :EndIf
 :EndIf
