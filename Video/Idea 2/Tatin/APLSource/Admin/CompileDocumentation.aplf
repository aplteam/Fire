 {r}←CompileDocumentation dummy;F;targetFolder;htmlFiles;markdownFiles;markdownFile;parms;html;ns;zipFilename;myZip;rc
⍝ Convert all markdown files in the docs/ folder to HTML and then zip the HTML files into TatinDocumentation.zip
 F←##.FilesAndDirs
 targetFolder←'./Dist/'
 htmlFiles←⊃F.Dir'./html/*.html'
 rc←F.DeleteFile¨htmlFiles   ⍝ Cleaning up any left-overs
 Assert rc∧.=1
 markdownFiles←⊃F.Dir'./docs/*.md'
 'TatinVars'##.⎕NS''
 ##.TatinVars.HOME←'./Assets/MarkAPL'
 :For markdownFile :In markdownFiles
     parms←##.MarkAPL.CreateParms
     parms.inputFilename←markdownFile
     parms.outputFilename←'html/',(2⊃⎕NPARTS markdownFile),'.html'
     parms.homeFolder←'Assets/MarkAPL'
     parms.verbose←0
     (html ns)←parms ##.MarkAPL.Markdown2HTML''
     ns.report←(~∨/¨'Invalid internal link'∘⍷¨ns.report)/ns.report ⍝ Necessary because at the time of writing (2020-02) MarkAPL may complain about an invalid internal link in any LeanPub extension when thet are actually perfectly fine
     ('Converting markdown-to-HTML failed for ',markdownFile)Assert 0=≢ns.report
 :EndFor
 htmlFiles←{⊃{⍺,⍵}/1↓⎕NPARTS ⍵}¨⊃F.Dir'html/*.html'
 zipFilename←targetFolder,'Tatin-Documentation-',({⍵/⍨3>+\'.'=⍵}2⊃##.Registry.Version),'.zip'
 F.DeleteFile zipFilename
 myZip←⎕NEW ##.DotNetZip(,⊂zipFilename)
 (F.PWD,'/html')∘{⍺ myZip.Add ⍵}¨htmlFiles
⍝Done
