 {r}←path Add deps;filename;b;sofar;tempFile
 ⍝ Add ⍵ (one or more dependencies) to dependency file in ⍺ (path).
 ⍝ ⍵ might be simple (=single dependency) or nested.\\
 ⍝ Comments start with a ";".\\
 ⍝ If there is no such file yet it is created.\\
 ⍝ Note that although ⍵ might contain an  (like `[tatin]`), this will be replaced by what the alias stands for.
 r←0
 deps←⊆deps
 :If ∨/b←'@'∊¨deps
     {'Invalid dependency'##.Assert 1='@'+.=⍵:}¨b/deps
 :EndIf
 :If ∨/b←'['∊¨deps
     {'Invalid dependency'##.Assert 1='['+.=⍵:}¨b/deps
 :EndIf
 'Invalid dependency'##.Assert{∧/'@['∊⍵:</⍵⍳'[@' ⋄ ⍵}¨deps
 deps←##.ReplaceRegistryAlias¨deps
 filename←path,'/',DEP_NAME
 {}Create⍣(0=##.F.Exists filename)⊣path
 b←##.Reg.IsValidPackageID_Complete¨{⍵↑⍨1+-⌊/(⌽⍵)⍳'/\]'}¨2⊃∘##.SplitAtAlias¨deps
 {}b{('Not valid package IDs: ',⊃,/{⍺,',',⍵}/(~⍺)/deps)##.Assert 0}⍣(0∊b)⊣0
 sofar←Get path
 sofar←((⊃¨sofar)∊¨⊂'/\')↓¨sofar            ⍝ Because there was a bug in the early days of Tatin that led to a leading / or \
 tempFile←(⊃,/2↑⎕NPARTS filename),'.tmp'
 sofar←∪sofar
 sofar←(~(##.Reg.RemoveMinorAndPatch¨sofar)∊##.Reg.RemoveMinorAndPatch¨deps)/sofar
 ((∪sofar,deps)'ASCII')##.F.NPUT tempFile
 ##.F.DeleteFile filename
 filename ⎕NMOVE tempFile
⍝Done
