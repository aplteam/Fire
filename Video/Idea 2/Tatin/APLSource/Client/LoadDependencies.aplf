 {r}←LoadDependencies y;path;tree;dep2;saveIn;cfg;msg;packageID;saveIn2;ref;url;principalFlag;refs;alias;installFolder;targetSpace;overwriteFlag;packageID2;qdmx
⍝ Requires two arguments:
⍝ * Folder with a build list (mandatory)
⍝ * Name of the target namespace
⍝ You may specify an optional third argument: the `overwriteFlag` flag which defaults to 0.
⍝ Use `overwriteFlag` in case all packages should be loaded even if they already exist in (#|⎕SE)._tatin\\
⍝ Loads all packages and injects required references into `targetSpace`.
⍝ Returns a vector with references to the loaded packages (no dependencies, principal packages only).
 'Length error on right argument'Assert(≢y)∊2 3
 'Invalid right argument'Assert 2=|≡y
 (installFolder targetSpace overwriteFlag)←3↑y,0
 ('Folder does not exist:',⍕installFolder)Assert ⎕NEXISTS installFolder
 r←refs←⍬
 targetSpace←⍕targetSpace
 :If 0=⎕NC targetSpace
     targetSpace Reg.CreateNamespace ⎕THIS
 :EndIf
 CheckBuildList installFolder
 :If 0<≢tree←LoadBuildList installFolder
     :For principalFlag packageID url :In ↓tree
         (alias packageID)←{~'@'∊⍵:''⍵ ⋄ '@'(≠⊆⊢)⍵}packageID
         path←installFolder,'/',packageID
         ('Cannot find package "',path,'"')Assert F.Exists path
         saveIn←GetTatinRootSpace 3⍴targetSpace
         cfg←ReadPackageConfigFile path
         packageID2←1 GetPackageIDFromFilename path
         saveIn,←'.',packageID2
         :If 0=⎕NC saveIn   ⍝ Might already exist
         :OrIf overwriteFlag
             :If overwriteFlag
                 {(⍎⍺).⎕EX ⍵}/¯1 0↓¨'.'A.SplitPath saveIn
             :EndIf
             EstablishSystemVars saveIn cfg
             Reg.ImportWithQuadFIX(path,'/',cfg.source)(saveIn,'.code')
             ⍝ Unreliable: #253    msg←Reg.ImportWithLink(saveIn,'.code')(path,'/',cfg.source)
             ⍝'Link failed to import code'Assert'Imported:'{⍺≡(≢⍺)↑⍵}msg
             ⍝ But we also don't want Tatin to be dependent on Link, at least not yet.
             ref←⍎saveIn
             EstablishStuffInTatinVars ref cfg path
         :Else
             ref←⍎saveIn
         :EndIf
         refs,←ref
         :If 1=principalFlag
             r,←ref
         :EndIf
         :If 1=principalFlag
             :Trap 998
                 LinkTargetToPackage cfg saveIn targetSpace alias
             :Else
                 qdmx←⎕DMX
                 ⎕DL 0.02
                 F.RmDir path
                 qdmx.EM ⎕SIGNAL qdmx.EN
             :EndTrap
         :EndIf
     :EndFor
     LinkDependencies refs
     ExecutePackageLX installFolder targetSpace tree
 :EndIf
⍝Done
