 refs←{dry}ReInstallDependencies_(deps installFolder registry noBetas update);i;pkg;ref;msg;alias;identifier;tempDir
⍝ Re-installs all packages listd by `deps`, including any dependencies.\\
⍝ In case `dry` is 1 it reports to the session what it _would_ do.\\
⍝ All work is done in a temp folder. Without -dry that temp folder will eventually replace the install folder.
⍝ With -dry the temp folder will be deleted.
⍝ By default principal packages are not upgraded but re-installed in exactly the same way as before.
⍝ You can change this by setting `upgrade←1`.
⍝ Note that this has a side effect: the same principal packages but with different version numbers (not major)
⍝ will all be replaced by the latest version except those that have an alias assigned.
 dry←{0<⎕NC ⍵:⍎⍵ ⋄ 0}'dry'
 refs←⍬
 tempDir←F.GetTempSubDir''
 tempDir ⎕NCOPY installFolder,'/',Reg.DependenciesFilename                  ⍝ Copy the dependency file
 tempDir{0=≢⍵:shy←⍬ ⋄ ⍺∘{⍺ ⎕NCOPY ⍵}¨⍵}F.ListFiles installFolder,'/*.zip'   ⍝ Copy any ZIP files (packages)
 :For i :In ⍳≢deps
     pkg←i⊃deps
     :If update
         pkg←Reg.RemoveMinorAndPatch pkg
     :EndIf
     msg←'Fetching package ',(⍕i),' of ',(⍕≢deps),' (',pkg,')',((0<≢registry)/' from ',registry),' ',(dry/'(dry)'),'...'
     PrintToSession msg
     ref←noBetas InstallPackage(registry,pkg)tempDir
     PrintToSession'  Installed',(dry/' (dry)'),': ',ref,⎕UCS 13
     refs,←⊂ref
 :EndFor
 :If dry
     ⎕DL 0.02
     F.RmDir tempDir
     PrintToSession'Dry run, no packages got installed'
 :Else
     'Establishing re-installed packages failed, therefore nothing was changed'Assert installFolder ReplaceFolderBy tempDir
 :EndIf
