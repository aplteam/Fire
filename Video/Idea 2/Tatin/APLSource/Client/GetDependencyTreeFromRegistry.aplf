 {r}←principal GetDependencyTreeFromRegistry path;deps;dep;identifier;dep2;alias
⍝ Reads the dependency file of `path` and processes them.\\
⍝ Requires semi-global ∆TREE
 r←⍬
 path←Reg.AddSlash path
 deps←Dependencies.Get path
 :For dep :In deps
     (alias dep2)←SplitAtAlias dep
     :If Reg.IsHTTP dep2
         identifier←dep2
     :ElseIf ∧/'[]'∊dep2
         identifier←ReplaceRegistryAlias dep2
     :ElseIf Reg.IsFILE dep2
         identifier←RemoveFileProtocol dep2
     :ElseIf F.IsDir path,dep2
         identifier←path,dep2
     :Else
         identifier←(Reg.RemoveOneLevel path),'/',dep2
     :EndIf
     :If (⊂alias,GetPackageIDFromFilename identifier)∊GetPackageIDFromFilename¨∆TREE.{Data[;∆packageID]}⍬ ⍝ Avoid circular references
         :Continue
     :EndIf
     :If ~Reg.IsHTTP identifier
     :AndIf 0=⎕NEXISTS identifier
         identifier←(EstablishRegistry dep2),dep2
     :EndIf
     {}GetDependencyTree principal(alias,RemoveFileProtocol identifier)
 :EndFor
⍝Done
