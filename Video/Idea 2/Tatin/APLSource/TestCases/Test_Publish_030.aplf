 r←Test_Publish_030(stopFlag batchFlag);⎕TRAP;rc;msg;zipFilename
 ;dir;src;dist;body;cfg;reg;list;expected;zipped;list2
⍝ Publish a simple package with a single non-source file
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 dir←GetTempDir ⍬
 (src dist reg)←(⊂dir,'/'),¨'src' 'dist' 'reg'
 F.MkDir src dist reg

 TC.Reg.CreateRegistry reg
 TC.MyUserSettings.AddRegistry'[local2]',reg

 body←':Namespace Test' 'foo←{' '⍵' '}' ':EndNamespace'
 (⊂body)F.NPUT src,'/Test.apln'
 (⊂'DLL')F.NPUT src,'/my.dll'
 cfg←TC.InitPackageConfig ⍬
 cfg.group←'Example'
 cfg.name←'Package_A'
 cfg.version←'1.0.0'
 cfg.source←'Test.apln'
 cfg.assets←'my.dll'
 TC.WritePackageConfigFile src cfg

 (rc msg zipFilename)←TC.PublishPackage src reg
 Assert 200=rc

 →T.GoToTidyUp 1≠≢list←F.ListDirs reg
 →T.GoToTidyUp(,⊂'Example-Package_A-1.0.0')≢{⊃,/1↓⎕NPARTS ⍵}¨list
 →T.GoToTidyUp 2≠≢list2←F.ListFiles(1⊃list),'/'
 →T.GoToTidyUp 0=+/'/Example-Package_A-1.0.0.zip'∘{⍺≢(-≢⍺)↑⍵}¨list2
 expected←'apl-package.json' 'Test.apln' 'my.dll'
 zipped←Reg.DotNetZip.ListZipContents list2 ∆GetByExtension'.ZIP'
 →T.GoToTidyUp~expected ∆LazyMatch zipped

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert TC.MyUserSettings.RemoveRegistry'[local2]'
 F.DeleteFile zipFilename
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
