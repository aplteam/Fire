 r←Test_Load_055(stopFlag batchFlag);⎕TRAP;rc;msg;zipFilename;toBeDeleted
 ;dir;src;body;cfg;reg;list;index;expected;zipped;src2;src3;refs
⍝ Publish two packages (consisting of classes) with a dependency, then load from specific Registry.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←GetTempDir ⍬
 (src reg)←(⊂dir,'/'),¨'src' 'reg'
 F.MkDir src reg
 F.MkDir src2←src,'/MyClass/'
 F.MkDir src3←src,'/MyBaseClass/'
 {F.MkDir ⍵,'/source'}¨src2 src3
 toBeDeleted←''

 TC.Reg.CreateRegistry reg
 TC.MyUserSettings.AddRegistry'[local2]',reg

 body←':Class MyClass:MyBaseClass' '∇r←Math arg' ':Access Public Shared' 'r←×/arg' '∇' ':EndClass'
 (⊂body)F.NPUT src2,'/source/MyClass.aplc'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'MyCompany' 'MyClass' '1.0.0'
 cfg.source←'source'
 cfg.api←'MyClass'
 TC.WritePackageConfigFile src2 cfg
 src2 TC.Dependencies.Add'MyCompany-MyBaseClass-1.0.0'
 (rc msg zipFilename)←TC.PublishPackage src2 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 body←':Class MyBaseClass' '∇r←Copyright' ':Access Public Shared' 'r←''Copyright This and that 2020''' '∇' ':EndClass'
 (⊂body)F.NPUT src3,'/source/MyBaseClass.aplc'
 cfg←TC.InitPackageConfig ⍬
 cfg.source←'source'
 cfg.(group name version)←'MyCompany' 'MyBaseClass' '1.0.0'
 TC.WritePackageConfigFile src3 cfg
 (rc msg zipFilename)←TC.PublishPackage src3 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 refs←TC.LoadPackage(reg,'/MyCompany-MyClass-1.0.0')#.TEMP
 →T.GoToTidyUp 12≠#.TEMP.MyClass.Math 3 4
 →T.GoToTidyUp'Copyright This and that 2020'≢#.TEMP.MyClass.Copyright

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert TC.MyUserSettings.RemoveRegistry'[local2]'
 F.DeleteFile toBeDeleted
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
