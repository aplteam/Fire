 r←Test_Load_070(stopFlag batchFlag);⎕TRAP
 ;dir;src;zip;body;cfg;zipfile;refs
⍝ Pack a package with a file asset and then load it
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←GetTempDir ⍬
 (src zip)←(⊂dir,'/'),¨'src' 'reg'
 F.MkDir src zip

 body←':Namespace Constants' '∇r←PI' 'r←3.14' '∇' ':EndNamespace'
 (⊂body)F.NPUT src,'/Constants.apln'
 (⊂'My DLL')F.NPUT src,'/file.dll'

 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Constants' '0.1.0'
 cfg.source←'Constants.apln'
 cfg.api←'Constants'
 cfg.assets←'file.dll'
 TC.WritePackageConfigFile src cfg
 zipfile←TC.Pack src zip

 refs←TC.LoadPackage('file://',zipfile)#.TEMP
 Assert 3=#.TEMP.Constants.⎕NC'PI'
 →T.GoToTidyUp 3.14≠#.TEMP.Constants.PI
 →T.GoToTidyUp 0≥≢#.TEMP.Constants.##.TatinVars.URI
 →T.GoToTidyUp 0≥≢#.TEMP.Constants.##.TatinVars.HOME
 →T.GoToTidyUp 0=≢refs
 →T.GoToTidyUp~(⊂'file.dll')∊⊃¨,/¨1↓¨⎕NPARTS¨⊃0 ⎕NINFO⍠('Wildcard' 1)⊣#.TEMP.Constants.##.TatinVars.HOME,'/*'

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert 0=⊃F.RmDir refs
 #.⎕EX TC.GetTatinRootSpace'#'
 Assert 0=⊃F.RmDir #.TEMP.Constants.##.TatinVars.HOME
⍝Done
