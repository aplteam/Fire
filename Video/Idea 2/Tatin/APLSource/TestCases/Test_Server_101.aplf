 r←Test_Server_101(stopFlag batchFlag);⎕TRAP;zipFilename;msg;rc
 ;packageID;serverPath;index1;index2;zip;cfg;body;clientCfg;dir;src;res
⍝ Publish a package with dependencies to the server.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 dir←GetTempDir ⍬
 (src zip)←(⊂dir,'/'),¨'src' 'zip'
 F.MkDir src zip
 serverPath←∆GetServerPath

 body←':Namespace Test' 'foo←{' '⍵' '}' ':EndNamespace'
 (⊂body)F.NPUT src,'/Test.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.group←'Example'
 cfg.name←'Package_A'
 cfg.version←'0.1.0'
 cfg.source←'Test.apln'
 TC.WritePackageConfigFile src cfg
 (⊂'aplteam-APLTreeUtils-6.0.0')F.NPUT src,'/',Reg.DependenciesFilename

 packageID←'Example-Package_A-0.1.0'
 index1←1⊃F.NGET(serverPath,'/',Reg.Index.GetIndexFilename)1
 (rc msg zipFilename)←TC.PublishPackage src'https://localhost/'
 Assert 200=rc
 index2←1⊃F.NGET(serverPath,'/',Reg.Index.GetIndexFilename)1

 →T.GoToTidyUp(1+≢index1)≠≢index2
 →T.GoToTidyUp 0=F.IsDir serverPath,'/',packageID
 →T.GoToTidyUp 0=F.IsFile serverPath,'/',packageID,'/',packageID,'.zip'
 →T.GoToTidyUp 0=F.IsFile serverPath,'/',packageID,'/apl-package.json'
 →T.GoToTidyUp 0=F.IsFile serverPath,'/',packageID,'/',Reg.DependenciesFilename

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 ⎕DL 0.1
 Assert 0=⊃F.RmDir serverPath,'/',packageID  ⍝ Error? Try →⎕LC
 :Trap 6 ⋄ F.DeleteFile zipFilename ⋄ :EndTrap
 ∆RecompileIndexOnServer
⍝Done
