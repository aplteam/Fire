 r←Test_Pack_008(stopFlag batchFlag);⎕TRAP
 ;dir;src;dist;cfg;zipfile;ns;list;expected;clientConfigFile;registries;deps
⍝ Pack one source file with a single dependency in a folder APLSource\
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 dir←GetTempDir ⍬
 (src dist)←(⊂dir,'/'),¨'src' 'dist'
 src,←'/v0.1.0'
 F.MkDir(src,'/APLSource')dist(src,'/docs')

 ('foo1←{1}')F.NPUT src,'/APLSource/foo1.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.group←'Example'
 cfg.name←'Package_B'
 cfg.version←'0.1.0'
 cfg.source←'APLSource'
 TC.WritePackageConfigFile src cfg

 TC.MyUserSettings.AddRegistry'[Dyalog]https://packages.dyalog.com'
 TC.MyUserSettings.AddRegistry'[MyCompany]https://packages.my-company.com'

 src D.Add'[tatin]aplteam-APLTreeUtils-1.0.0'

 zipfile←TC.Pack src dist
 →T.GoToTidyUp 0≥≢zipfile
 list←∆GetFileListFromZipArchive zipfile
 expected←'apl-package.json' 'APLSource/foo1.apln'TC.Reg.DependenciesFilename
 →T.GoToTidyUp~expected ∆LazyMatchPaths list

 r←T._OK

∆TidyUp:
 Assert TC.MyUserSettings.RemoveRegistry'[dyalog]'
 Assert TC.MyUserSettings.RemoveRegistry'[myCompany]'
 Assert 0=⊃F.RmDir dir
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
