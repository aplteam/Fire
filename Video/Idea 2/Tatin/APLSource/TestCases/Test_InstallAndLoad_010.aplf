 r←Test_InstallAndLoad_010(stopFlag batchFlag);⎕TRAP;rc;msg;zipFilename;toBeDeleted;res
 ;dir;src;body;cfg;zipfile;installFolder;src2;src3;src4;src5;reg
⍝ Two packages that depend on the same package but different versions; all are classes
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←GetTempDir ⍬
 (src reg)←(⊂dir,'/'),¨'src' 'reg'
 src2←src,'/Example-Constants-0.1.0/'
 src3←src,'/Example-Constants-0.2.0/'
 src4←src,'/Example-MyPiUtils1-1.0.0/'
 src5←src,'/Example-MyPiUtils2-1.1.0/'
 F.MkDir reg
 F.MkDir src2 src3 src4 src5,¨⊂'/APLSource'
 toBeDeleted←''

 TC.Reg.CreateRegistry reg
 TC.MyUserSettings.AddRegistry'[local2]',reg

 body←':Class Constants' '∇r←PI' ':Access Public Shared' 'r←3.14' '∇' ':EndClass'
 (⊂body)F.NPUT src2,'/APLSource/Constants.aplc'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Constants' '0.1.0'
 cfg.source←'APLSource'
 TC.WritePackageConfigFile src2 cfg
 (rc msg zipFilename)←TC.PublishPackage src2 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 body←':Class Constants' '∇r←PI' ':Access Public Shared' 'r←3.1415926' '∇' ':EndClass'
 (⊂body)F.NPUT src3,'/APLSource/Constants.aplc'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Constants' '0.2.0'
 cfg.source←'APLSource'
 TC.WritePackageConfigFile src3 cfg
 (rc msg zipFilename)←TC.PublishPackage src3 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 body←':Class MyPiUtils1' '∇r←GetPI' ':Access Public Shared' 'r←##.Constants.PI' '∇' ':EndClass'
 (⊂body)F.NPUT src4,'/APLSource/MyPiUtils1.aplc'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'MyPiUtils1' '1.0.0'
 cfg.source←'APLSource'
 cfg.api←'MyPiUtils1'
 TC.WritePackageConfigFile src4 cfg
 src4 TC.Dependencies.Add'Example-Constants-0.1.0'
 (rc msg zipFilename)←TC.PublishPackage src4 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 body←':Class MyPiUtils2' '∇r←GetPI' ':Access Public Shared' 'r←##.Constants.PI' '∇' ':EndClass'
 (⊂body)F.NPUT src5,'/APLSource/MyPiUtils2.aplc'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'MyPiUtils2' '1.0.0'
 cfg.source←'APLSource'
 cfg.api←'MyPiUtils2'
 TC.WritePackageConfigFile src5 cfg
 src5 TC.Dependencies.Add'Example-Constants-0.2.0'
 (rc msg zipFilename)←TC.PublishPackage src5 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 installFolder←GetTempDir'/Tatin_AppPackages'
 res←TC.InstallPackage('[local2]Example-MyPiUtils1-1.0.0')installFolder
 →T.GoToTidyUp res≢'Example-MyPiUtils1-1.0.0'
 res←TC.InstallPackage('[local2]Example-MyPiUtils2-1.0.0')installFolder
 →T.GoToTidyUp res≢'Example-MyPiUtils2-1.0.0'

 →T.GoToTidyUp 4≠≢F.ListDirs installFolder
 →T.GoToTidyUp 2≠≢F.ListFiles installFolder
 →T.GoToTidyUp'Example-MyPiUtils1-1.0.0' 'Example-MyPiUtils2-1.0.0'≢TC.Dependencies.Get installFolder

 {}TC.LoadDependencies installFolder #.TEMP
 →T.GoToTidyUp 3.1415926≠#.TEMP.MyPiUtils1.GetPI   ⍝ Because the "better" version...
 →T.GoToTidyUp 3.1415926≠#.TEMP.MyPiUtils2.GetPI   ⍝ ... is used in both cases!

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert TC.MyUserSettings.RemoveRegistry'[local2]'
 F.DeleteFile toBeDeleted
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
