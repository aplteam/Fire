 tempDir←InstallPackage_(packageID url);zipFilename;isHTTP;path
⍝ Fetches a package and unzips it into a temp folder.
⍝ When caching is on the temp folder is created within the top-level of the cache folder.
⍝ Otherwise a folder is created inside the temp directory of the given OS.
 :If isHTTP←Reg.IsHTTP url
     PrintToSession'  Fetching from ',url,'...'
     zipFilename←GetPackageViaHTTP url,packageID
 :Else
     :If '.zip'≡¯4↑url
         zipFilename←RemoveFileProtocol url
     :Else
         zipFilename←RemoveFileProtocol url,'/',packageID,'.zip'
     :EndIf
 :EndIf
 ('File <',zipFilename,'> does not exist')Assert F.IsFile zipFilename
 :If MyUserSettings.cacheing                                                             ⍝ If caching is active...
     tempDir←GetPathToPackageCache,'/temp/',packageID,'_',(GetMD5 zipFilename),'_',⎕AN   ⍝ ... we write to the cache folder
 :Else
     tempDir←Reg.GetTempDir,'/'packageID,'_',(GetMD5 zipFilename),'_',⎕AN                ⍝ ... otherwise to the temp folder of the OS
 :EndIf
 ⎕DL 0.02
 ('Does already exist: ',tempDir)Assert 0=F.IsDir tempDir
 F.MkDir tempDir
 PrintToSession'  Unzipping ',zipFilename,'...'
 zipFilename DotNetZip.UnzipTo tempDir
 tempDir Add2Config'uri'(RemoveFileProtocol url)
 :If isHTTP
     tempDir←MovePackageToCache tempDir url packageID
 :Else
     F.DeleteFile zipFilename
 :EndIf
⍝Done
