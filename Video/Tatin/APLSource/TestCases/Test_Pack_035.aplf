 r←Test_Pack_035(stopFlag batchFlag);⎕TRAP
 ;dir;src;dist;cfg;zipfile;ns;list;expected
⍝ Has several assets and does not specify the source which is single namespace script
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 dir←GetTempDir ⍬
 (src dist)←(⊂dir,'/'),¨'src' 'dist'
 src,←'/v0.1.0'
 F.MkDir(src,'/assets')dist

 ('foo←{1}')F.NPUT src,'/foo.apln'
 (⊂'a=1' 'b=2')F.NPUT src,'/assets/config.txt'
 (⊂'This' 'That')F.NPUT src,'/user_guide.txt'
 cfg←TC.InitPackageConfig ⍬
 cfg.group←'Example'
 cfg.name←'Package_B'
 cfg.version←'0.1.0'
 cfg.assets←'assets/' 'user_guide.txt'
 cfg.source←'foo.apln'
 TC.WritePackageConfigFile src cfg

 zipfile←TC.Pack src dist
 →T.GoToTidyUp 0≥≢zipfile
 list←∆GetFileListFromZipArchive zipfile
 expected←'apl-package.json' 'assets\config.txt' 'foo.apln' 'user_guide.txt'
 →T.GoToTidyUp~expected ∆LazyMatchPaths list

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Don
