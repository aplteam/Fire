 r←Test_InstallAndLoad_004(stopFlag batchFlag);⎕TRAP;installFolder;noOf;rc;msg;zipFilename;toBeDeleted
 ;dir;src;body;cfg;reg;list;index;expected;zipped;src2;src3;refs
⍝ Publish three packages (consisting of functions) with dependencies, install (specific Registry) and load.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←GetTempDir ⍬
 (src reg)←(⊂dir,'/'),¨'src' 'reg'
 F.MkDir src reg
 F.MkDir src2←src,'/package_A'
 toBeDeleted←''

 TC.Reg.CreateRegistry reg
 TC.MyUserSettings.AddRegistry'[local2]',reg

 body←':Namespace A' '  Times_←{' '    ##.Arithmetic.Times ⍵' '  }' ':EndNamespace'
 (⊂body)F.NPUT src2,'/A.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'A' '1.0.0'
 cfg.source←'A.apln'
 cfg.api←'A'
 TC.WritePackageConfigFile src2 cfg
 src2 TC.Dependencies.Add'Example-Arithmetic-1.0.0'
 (rc msg zipFilename)←TC.PublishPackage src2 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 F.MkDir src3←src,'/B'
 body←'r←Call arg' '  r←A.Times_ arg'
 (⊂body)F.NPUT src3,'/Call.aplf'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'B' '1.0.0'
 cfg.source←'Call.aplf'
 TC.WritePackageConfigFile src3 cfg
 src3 TC.Dependencies.Add'Example-A-1.0.0'
 (rc msg zipFilename)←TC.PublishPackage src3 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 F.MkDir src3←src,'/Arithmetic'
 body←' r←Times v' '  r←×/v'
 (⊂body)F.NPUT src3,'/Times.aplf'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Arithmetic' '1.0.0'
 cfg.source←'Times.aplf'
 TC.WritePackageConfigFile src3 cfg
 (rc msg zipFilename)←TC.PublishPackage src3 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 installFolder←GetTempDir'/Tatin_AppPackages'
 refs←TC.InstallPackage('[local2]Example-B-1.0.0')installFolder
 expected←'Example-A-1.0.0' 'Example-B-1.0.0' 'Example-Arithmetic-1.0.0'
 →T.GoToTidyUp~expected ∆LazyMatch TC.GetPackageIDFromFilename¨F.ListDirs installFolder,'/*'
 →T.GoToTidyUp~F.IsFile installFolder,'/',TC.Reg.DependenciesFilename

 noOf←≢TC.LoadDependencies installFolder #.TEMP
 →T.GoToTidyUp 1≠noOf
 →T.GoToTidyUp 12≢#.TEMP.B.Call 3 4

 r←T._OK

∆TidyUp:
 Assert 0=1⊃F.RmDir dir
 Assert TC.MyUserSettings.RemoveRegistry'[local2]'
 F.DeleteFile toBeDeleted
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
