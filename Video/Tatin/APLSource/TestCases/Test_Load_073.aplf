 r←Test_Load_073(stopFlag batchFlag);⎕TRAP;assets;res
 ;dir;src;zip;body;cfg;zipfile;refs
⍝ Pack a package with several files in an asset folder and then load it
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←GetTempDir ⍬
 (src zip)←(⊂dir,'/'),¨'src' 'reg'
 assets←src,'/assets'
 F.MkDir src zip
 F.MkDir assets

 (⊂'first')F.NPUT assets,'/first.dll'
 (⊂'second')F.NPUT assets,'/second.dll'

 body←':Namespace Foo' '∇r←GetAssetList' 'r←⊃⎕NINFO⍠(''Wildcard'' 1)⊢##.TatinVars.HOME,''/assets/*''' '∇' ':EndNamespace'
 (⊂body)F.NPUT src,'/Foo.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Foo' '0.1.0'
 cfg.source←'Foo.apln'
 cfg.api←'Foo'
 cfg.assets←assets
 TC.WritePackageConfigFile src cfg
 zipfile←TC.Pack src zip

 refs←TC.LoadPackage('file://',zipfile)#.TEMP
 →T.GoToTidyUp 3≠#.TEMP.Foo.⎕NC'GetAssetList'
 res←#.TEMP.Foo.GetAssetList
 →T.GoToTidyUp 2≠≢res
 →T.GoToTidyUp~∧/res∘{∨/∨/¨⍵∘⍷¨⍺}¨'first.dll' 'second.dll'

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir refs
 Assert 0=⊃F.RmDir dir
 F.DeleteFile zipfile
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
