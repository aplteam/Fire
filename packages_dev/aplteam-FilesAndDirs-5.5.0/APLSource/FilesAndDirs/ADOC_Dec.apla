(
 '## Overview'
 ''
 'This class offers methods useful for dealing with files and directories. The class aims'
 'to be platform-independent and works under Windows, Linux and Mac OS.\\'
 'Note that error codes as well as messages may differ between operating systems for the same'
 'kind of problem.\\'
 ''
 '## Characters to avoid in file names and paths'
 'Windows filenames cannot include any of these characters: `\/:*?"<>|`.'
 'If you want platform-independent code now or in the future,'
 'avoid using them even in Mac OS or Linux filenames.\\'
 ''
 '## Separators in filepaths'
 'Dyalog tried to ease the pain by converting any `\` character under Windows to a `/`.'
 'The notion of sticking always with the `/` as separator because it works anyway is'
 'attractive but creates new poblems: when you call third-party software such as a .NET'
 'assembly or an EXE such as 7zip.exe under Windows, then you **must** use `\` as a separator.'
 'Even setting the `Directory` property of a `FileBox` object fails with `/` as a separator.\\'
 'For platform independence it is essential that filenames and directory names are _normalized_.'
 'That means using the correct separator for the current operating system.'
 'Otherwise you might create a directory or file with a backslash in its name, something that'
 'turns easily catastrophic under Linux or Mac OS.\\'
 'The methods of `FilesAndDirs` protect you from this problem by normalizing their filepaths.'
 'Use cover functions such as `MkDir`, `NNAMES` and `NCREATE` etc. in preference to the'
 'corresponding built-in system functions to overcome the problem.\\'
 '`⎕NCOPY` and `⎕NMOVE` (introduced in 17.0) are exceptions: because these allow setting options'
 'with the `⍠` operator cover functions would have to invent a complex syntax in order to mimic'
 'this, so instead we suggest to use the native system functions and massage the paths with'
 '`ExpandPath` befor passing them on.'
 'The `CurrentSep` method returns the correct separator for the current operating system.\\'
 'The `NormalizePath` method normalizes a filepath for the current operating system.\\'
 'If you have a particular reason for using `/` under Windows or `\` under Linux'
 'or Mac OS then you can use the methods `EnforceBackslash` or `EnforceSlash`.\\'
 ''
 '## Misc'
 'This class supports Windows, Mac OS and Linux but neither the Raspberry Pi nor AIX.'
 ''
 'Kai Jaeger'
 ''
 'Homepage: <http://github.com/aplteam/FilesAndDirs>'
)
