 body←RemoveFnsAndOpr body;mask;b1;b2;b;split;ind;buffer;hits;part;start;length;buff
⍝ Remove all functions and operators from script code ⍵.
⍝ This is necessary because fns and opr are dealt with already as if
⍝ they were members of an ordinary namespace, so we just need to focus
⍝ on stuff outside functions and operators, typically comments and the
⍝ assignment of any variables.
⍝ We must ignore "∇{}" inside comments and text, and we must be able to
⍝ deal with both, multiline dfns and interlocked dfns.
 mask←Replace.MaskText¨body
 mask←{((⍴⍵)=i←⍵⍳'⍝'):⍵ ⋄ (⍴⍵)↑i↑⍵}¨mask
 (body mask)←{1↓Simplify CR,¨⍵}¨body mask
 b1←'{'=mask
 b2←'}'=mask
 b←(CR≠mask)∧b2∨0≠(+\b1)-+\b2
 (b1/b)←0                           ⍝ Let the "{" survive - we need this later
 (b/body)←' '
 (b/mask)←' '
 body[A.Where(CR≠mask)∧({⍵∨≠\⍵}'∇'=mask)]←' '
 ((mask='}')/mask)←' '
 body←CR A.Split body
 mask←CR A.Split mask
 b1←∨/¨mask='{'
 b2←~'⋄'∊¨b1/mask                   ⍝ Those in b1 have no "⋄"
 ind←b2/A.Where b1                  ⍝ Transform into index
 mask[ind]←(↑∘⍴¨mask[ind])⍴¨' '     ⍝ ...therefore they are getting blanks.
 b1[b2/A.Where b1]←0                ⍝ Forget those
 :If 0<+/b1                         ⍝ Are there any "⋄" at all?
     split←{1,'⋄'=⍵}¨b1/mask
     buffer←split{⎕IO←⎕ML←1 ⋄ ⍺⊂'⋄',⍵}¨b1/body
 :AndIf 0<+/b2←∊{∨/'←{'⍷⍵}¨¨buffer
     (b2/buffer)←{1↓↑,/{(∨/'←{'⍷⍵):(⍴,⍵)⍴' ' ⋄ ⍵}¨⍵}¨b2/buffer
     (b1/body)←buffer
 :EndIf
 ⍝ Get rid of "name←{"
 hits←⌽'\w{1,}←\{'⎕S 2 0 1⊣body
 :For part start length :In hits
     buff←part⊃body
     buff←(-start)⌽(length⍴' '),length↓start⌽buff
     (part⊃body)←buff
 :EndFor
⍝Done
