 r←GetNameFromDelLine header;isOpr;Split
 ⍝ Takes the def line for a trad fns/opr from a namespace scripts like
 ⍝ {(a b)}←{opt}foo(a b c);a;v ⍝ any comment
 ⍝ or
 ⍝ ∇ {(a b)}←{opt}foo(a b c);a;v ⍝ any comment
 ⍝ and returns just the name (foo) no matter that the signature looks like
 ⍝ This function has its own text case: #.TestCases.Test_064
 r←{('∇'∊⍵):⍵↓⍨1+⍵⍳'∇' ⋄ ⍵}header
 Split←##.##.APLTreeUtils.Split
 r←{('←'∊⍵):⍵↓⍨1+⍵⍳'←' ⋄ ⍵}r                ⍝ Get rid of any explicit result
 r←{('⍝'∊⍵):⍵↑⍨⍵⍳'⍝' ⋄ ⍵}r                  ⍝ Get rid of any comment
 r↑⍨←r⍳';'                                  ⍝ Get rid of any local variables
 r←{('}'∊⍵):⍵↓⍨1+⍵⍳'}' ⋄ ⍵}r                ⍝ Get rid of optional arguments
 r←##.##.APLTreeUtils.dmb r                 ⍝ Delete any leading/trailing/multiple blanks
 r{⍵:' d',⍨⍺↓⍨-1+'('⍳⍨⌽⍺ ⋄ ⍺}←')'=¯1↑r      ⍝ Replace multiple right arguments with dummy (if any)
 isOpr←('('=1⍴r)∨3=r+.=' '                  ⍝ Is it an operator?
 :If isOpr
     r←{('('=1⍴⍵):{⍵↑⍨⍵⍳')'}1↓⍵ ⋄ ⍵}r       ⍝ Handle operators
     :Select ' '+.=r
     :Case 0
         .                                  ⍝ Huuh?!
     :Case 1                                ⍝ Monadic
         r↓⍨←1+r⍳' '
     :Case 2                                ⍝ Dyadic
         r←1⊃' 'Split r
     :Else
         r↓⍨←1+r⍳' '                        ⍝ Get rid of left argument
         r←')'~⍨1⊃' 'Split r
     :EndSelect
 :Else
     :Select ' '+.=r
     :Case 0
     ⍝ Nothing to do
     :Case 1                                ⍝ Monadic
         r↑⍨←r⍳' '
     :Case 2                                ⍝ Dyadic
         r←1⊃' 'Split r
     :Else
         .                                  ⍝ Huuh?!
     :EndSelect
 :EndIf
