 G←CompileRegExReport(name oldCode newCode lineNumbers ind length nc n2 deleteFlag);oldCode;length;ns;fns;html;caption
⍝ Collect all the information needed and then call CompileReport_.
 G←CollectData oldCode newCode lineNumbers ind nc
 G.DeleteFlag←deleteFlag
 ##.F.DeleteFile n2.∆HtmlFilename
 n2.∆HtmlFilename WriteFile TopOfDoc n2.∆CssFilename
 caption←name,'  (⎕NC=',(⍕nc)
 :If 2=⌊nc
     caption,←{0::'' ⋄ ', depth=',⍕⍵}≡⍎name
     caption,←{0::'' ⋄ ', shape=',⍕⍵}⍴⍎name
 :EndIf
 caption,←')'
 n2.∆CssFilename WriteFile'<div id="title">',caption,'</div>'
 ns←⎕NS''
 ns.options←##.Replace.GetRegExOptions oldCode ##.G
 ns.ss←##.Replace.GetRegExSearchString ##.G G.NC                ⍝ Search string
 ns.rs←##.Replace.GetRegExReplaceString ##.G ns.ss G.NC         ⍝ Replace string
 ns.lines←∪lineNumbers
 ns.IDs←(⍕¨lineNumbers),¨'-',¨(⍕¨↑,/{1+⍳⍵}¨+⌿{⍵∘.=∪⍵}lineNumbers)
 ns.no←⍳≢G.Length
 oldCode←{##.CR ##.A.Split ⍵}⍣(##.CR∊oldCode)⊣oldCode
 :If 2=≡oldCode
 :AndIf 1=≢oldCode
     oldCode←↑,/oldCode
 :EndIf
 :If 1=≡oldCode
     ns.i←1
     fns←ns∘{
         ns←⍺
         id←⍕ns.i
         ns.i+←1
         '<span class="diff-old" id="n-',id,'-old">',⍵.Match,'</span><span class="diff-new" id="n-',id,'-new">',ns.rs,'</span>'
     }
     html←ns.ss ⎕R fns⍠ns.options⊣##.A.DLB oldCode
     html←'<div class="line"><code>',html,'</code></div>'
 :Else
     ns.i←0
     fns←ns∘{
         ns←⍺
         id←⍕ns.i⊃ns.IDs
         ns.i+←1
         new←ns.ss ⎕R ns.rs⍠ns.options⊣⍵.Match
         '<span class="diff-old" id="n',id,'-old">',⍵.Match,'</span><span class="diff-new" id="n',id,'-new">',new,'</span>'
     }
     html←ns.ss ⎕R fns⍠ns.options⊣##.A.DLB oldCode[∪ns.lines]
     html←(⍕¨∪lineNumbers){'<div class="line"><span class="lineno">[',⍺,']</span><code>',⍵,'</code></div>'}¨html
 :EndIf
 n2.∆HtmlFilename WriteFile html
 n2.∆HtmlFilename WriteFile BottomOfDoc
⍝Done
